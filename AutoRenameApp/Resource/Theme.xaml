<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shared="clr-namespace:AutoRenameApp.Shared"
                    xmlns:local="clr-namespace:AutoRenameApp.Resource">

    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
    <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF042271"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ScrollViewer CanContentScroll="True" Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ItemContentStyle" TargetType="ListViewItem">
        <Style.Resources>
            <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Color="#22000000" Offset="0" />
                <GradientStop Color="#44000000" Offset="0.4" />
                <GradientStop Color="#55000000" Offset="0.6" />
                <GradientStop Color="#33000000" Offset="0.9" />
                <GradientStop Color="#22000000" Offset="1" />
            </LinearGradientBrush>
        </Style.Resources>
        <Setter Property="Padding" Value="0,4" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <!-- The default control template for ListViewItem has a Border 
           which contains the item's content. -->
        <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
        <Setter Property="Border.BorderBrush" Value="LightGray" />
        <!-- These triggers react to changes in the attached properties set
           during a managed drag-drop operation. -->
        <Style.Triggers>
            <Trigger Property="shared:ListViewItemDragState.IsBeingDragged" Value="True">
                <Setter Property="FontWeight" Value="DemiBold" />
            </Trigger>
            <Trigger Property="shared:ListViewItemDragState.IsUnderDragCursor" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Height" Value="27" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type Label}" >
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="3 0 0 0" />
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="23" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="180" />
    </Style>

</ResourceDictionary>